{"version":3,"sources":["images/logo.png","components/Header.js","components/EmailModal.js","components/Content.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","fixed","src","logo","alt","style","color","defaultProps","sleep","ms","Promise","r","setTimeout","EmailModal","props","show","onHide","useState","loading","setLoading","error","setError","emailSent","setEmailSent","url","handleSubmit","values","sendEmail","name","email","payload","a","fetch","method","body","JSON","stringify","then","res","ok","reject","catch","response","json","errorMessage","schema","yup","shape","required","emailCf","oneOf","Modal","centered","backdrop","closeButton","borderBottom","textAlign","padding","Title","flexBasis","Body","marginBottom","Button","onClick","width","border","background","validationSchema","onSubmit","initialValues","handleChange","handleBlur","touched","errors","isValid","Form","noValidate","Group","controlId","Control","type","value","placeholder","onChange","isInvalid","Feedback","disabled","length","marginTop","Content","modalShow","setModalShow","variant","Footer","fontStyle","Date","getFullYear","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58a1461d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.66e2e7f8.png\";","import React from 'react';\nimport logo from '../images/logo.png'\nimport './Header.css'\n// import PropTypes from 'prop-types';\n\nexport default function Header() {\n  return (\n    <header className=\"app-header\">\n      <div fixed=\"top\" className=\"nav\">\n        <img className=\"logo mr-2\" src={logo} alt=\"logo\" />\n          <span style={{ color: '#70A618' }}>Brocolli</span>\n          <span style={{ color: '#3D4056' }}> & Co.</span>\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {};\nHeader.defaultProps = {};\n","import React, { useState } from \"react\";\nimport \"./EmailModal.css\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\nexport default function EmailModal({ ...props }) {\n  const { show, onHide } = props;\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [emailSent, setEmailSent] = useState(false);\n\n  const url =\n    \"https://l94wc2001h.execute-api.ap-southeast-2.amazonaws.com/prod/fake-auth\";\n  function handleSubmit(values) {\n    let payload = {\n      name: values.name,\n      email: values.email,\n    };\n    sendEmail(payload);\n  }\n\n  async function sendEmail(payload) {\n    setLoading(true);\n    // try {\n    await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    })\n      .then((res) => {\n        if (res.ok) {\n          setEmailSent(true);\n        }\n        return Promise.reject(res);\n      })\n      .catch((response) => {\n        response.json().then((json) => {\n          setError(json.errorMessage);\n        });\n      });\n    setLoading(false);\n  }\n\n  const schema = yup.object().shape({\n    name: yup.string().required(\"Let me know your name.\"),\n    email: yup\n      .string()\n      .email(\"Please enter a valid email\")\n      .required(\"Please enter email.\"),\n    emailCf: yup\n      .string()\n      .email(\"Please enter a valid email.\")\n      .required(\"You need to confirm the email.\")\n      .oneOf(\n        [yup.ref(\"email\"), null],\n        \"The email confirmation does not match.\"\n      ),\n  });\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={onHide}\n        centered\n        backdrop=\"static\"\n        className=\"email-modal\"\n      >\n        <Modal.Header\n          closeButton\n          style={{\n            borderBottom: \"none\",\n            textAlign: \"center\",\n            padding: \"1.5rem 1.5rem\",\n          }}\n        >\n          <Modal.Title style={{ flexBasis: \"100%\" }}>\n            <div className=\"title-text\">\n              {emailSent ? `All done!` : `Request an invite`}\n            </div>\n          </Modal.Title>\n        </Modal.Header>\n        {emailSent ? (\n          <Modal.Body>\n            <p style={{ marginBottom: 32 }}>\n              You will be one of the first to experience Broccoli & Co. when we\n              launch.\n            </p>\n            <Button\n              onClick={onHide}\n              style={{ width: \"100%\", border: \"none\", background: \"#70A618\" }}\n            >\n              OK\n            </Button>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <Formik\n              validationSchema={schema}\n              onSubmit={async (values) => {\n                await sleep(500);\n                handleSubmit(values);\n              }}\n              initialValues={{\n                name: \"\",\n                email: \"\",\n                emailCf: \"\",\n              }}\n            >\n              {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n              }) => (\n                <Form noValidate onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"name\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"name\"\n                      value={values.name}\n                      placeholder=\"Full Name\"\n                      onChange={handleChange}\n                      isValid={touched.name && !errors.name}\n                      isInvalid={!!errors.name}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.name}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group controlId=\"email\">\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      value={values.email}\n                      onChange={handleChange}\n                      placeholder=\"Email\"\n                      isValid={touched.email && !errors.email}\n                      isInvalid={!!errors.email}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.email}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group controlId=\"emailCf\">\n                    <Form.Control\n                      type=\"email\"\n                      name=\"emailCf\"\n                      value={values.emailCf}\n                      onChange={handleChange}\n                      placeholder=\"Confirm Email\"\n                      isValid={touched.emailCf && !errors.emailCf}\n                      isInvalid={!!errors.emailCf}\n                      disabled={values.email.length > 0 ? false : true}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.emailCf}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n\n                  {loading ? (\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        width: \"100%\",\n                        background: \"gray\",\n                        border: \"none\",\n                      }}\n                    >\n                      Sending, please wait.\n                    </Button>\n                  ) : (\n                    <Button\n                      type=\"submit\"\n                      style={{\n                        width: \"100%\",\n                        background: \"#70A618\",\n                        border: \"none\",\n                      }}\n                    >\n                      Send\n                    </Button>\n                  )}\n                  {error && (\n                    <p style={{ color: \"red\", marginTop: 24 }}>{error}</p>\n                  )}\n                </Form>\n              )}\n            </Formik>\n          </Modal.Body>\n        )}\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./Content.css\";\nimport EmailModal from \"./EmailModal\";\n// import { useSendRequestInvite } from './redux/sendRequestInvite';\n\nexport default function Content() {\n  const [modalShow, setModalShow] = useState(false);\n\n  const handleModalShow = () => setModalShow(true);\n  const handleModalClose = () => setModalShow(false);\n\n  return (\n    <div className=\"app-content\">\n      <div className=\"slogan\">\n        <h1>\n          A better way <br /> to enjoy every day.\n        </h1>\n        <p>Be the first to know when we launch.</p>\n        <div className=\"request\">\n          <Button\n            style={{ background: \"#70A618\", border: \"none\" }}\n            onClick={handleModalShow}\n            variant=\"primary\"\n          >\n            Request an invite\n          </Button>\n        </div>\n      </div>\n\n      <EmailModal show={modalShow} onHide={handleModalClose} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Footer.css\";\n// import PropTypes from 'prop-types';\n\nexport default function Footer() {\n  return (\n    <div className=\"app-footer\">\n      <div className=\"footer-content\">\n        <p>Made with &#x1F49A; in Melbourne.</p>\n        <p style={{ fontStyle: \"italic\" }}>\n          &copy; {new Date().getFullYear()} Broccoli & Co. All rights reserved.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nFooter.propTypes = {};\nFooter.defaultProps = {};\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Content />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}